#include <iostream>
#include <fstream>

void WriteDefaultConf(std::ofstream& stream) {
	stream << "#\n";
	stream << "# This is the main Apache HTTP server configuration file.  It contains the\n";
	stream << "# configuration directives that give the server its instructions.\n";
	stream << "# See <URL:http://httpd.apache.org/docs/2.4/> for detailed information.\n";
	stream << "# In particular, see \n";
	stream << "# <URL:http://httpd.apache.org/docs/2.4/mod/directives.html>\n";
	stream << "# for a discussion of each configuration directive.\n";
	stream << "#\n";
	stream << "# Do NOT simply read the instructions in here without understanding\n";
	stream << "# what they do.  They're here only as hints or reminders.  If you are unsure\n";
	stream << "# consult the online docs. You have been warned.  \n";
	stream << "#\n";
	stream << "# Configuration and logfile names: If the filenames you specify for many\n";
	stream << "# of the server's control files begin with \"/\" (or \"drive:/\" for Win32), the\n";
	stream << "# server will use that explicit path.  If the filenames do *not* begin\n";
	stream << "# with \"/\", the value of ServerRoot is prepended -- so \"logs/access_log\"\n";
	stream << "# with ServerRoot set to \"/usr/local/apache2\" will be interpreted by the\n";
	stream << "# server as \"/usr/local/apache2/logs/access_log\", whereas \"/logs/access_log\" \n";
	stream << "# will be interpreted as '/logs/access_log'.\n";
	stream << "#\n";
	stream << "# NOTE: Where filenames are specified, you must use forward slashes\n";
	stream << "# instead of backslashes (e.g., \"c:/apache\" instead of \"c:\\apache\").\n";
	stream << "# If a drive letter is omitted, the drive on which httpd.exe is located\n";
	stream << "# will be used by default.  It is recommended that you always supply\n";
	stream << "# an explicit drive letter in absolute paths to avoid confusion.\n";
	stream << "\n";
	stream << "#\n";
	stream << "# ServerRoot: The top of the directory tree under which the server's\n";
	stream << "# configuration, error, and log files are kept.\n";
	stream << "#\n";
	stream << "# Do not add a slash at the end of the directory path.  If you point\n";
	stream << "# ServerRoot at a non-local disk, be sure to specify a local disk on the\n";
	stream << "# Mutex directive, if file-based mutexes are used.  If you wish to share the\n";
	stream << "# same ServerRoot for multiple httpd daemons, you will need to change at\n";
	stream << "# least PidFile.\n";
	stream << "#\n";
	stream << "\n";
	stream << "#\n";
	stream << "# Mutex: Allows you to set the mutex mechanism and mutex file directory\n";
	stream << "# for individual mutexes, or change the global defaults\n";
	stream << "#\n";
	stream << "# Uncomment and change the directory if mutexes are file-based and the default\n";
	stream << "# mutex file directory is not on a local disk or is not appropriate for some\n";
	stream << "# other reason.\n";
	stream << "#\n";
	stream << "# Mutex default:logs\n";
	stream << "\n";
	stream << "#\n";
	stream << "# Listen: Allows you to bind Apache to specific IP addresses and/or\n";
	stream << "# ports, instead of the default. See also the <VirtualHost>\n";
	stream << "# directive.\n";
	stream << "#\n";
	stream << "# Change this to Listen on specific IP addresses as shown below to \n";
	stream << "# prevent Apache from glomming onto all bound IP addresses.\n";
	stream << "#\n";
	stream << "#Listen 12.34.56.78:80\n";
	stream << "#Listen 80\n";
	stream << "\n";
	stream << "#\n";
	stream << "# Dynamic Shared Object (DSO) Support\n";
	stream << "#\n";
	stream << "# To be able to use the functionality of a module which was built as a DSO you\n";
	stream << "# have to place corresponding `LoadModule' lines at this location so the\n";
	stream << "# directives contained in it are actually available _before_ they are used.\n";
	stream << "# Statically compiled modules (those listed by `httpd -l') do not need\n";
	stream << "# to be loaded here.\n";
	stream << "#\n";
	stream << "# Example:\n";
	stream << "# LoadModule foo_module modules/mod_foo.so\n";
	stream << "#\n";
	stream << "LoadModule access_compat_module modules/mod_access_compat.so\n";
	stream << "LoadModule actions_module modules/mod_actions.so\n";
	stream << "LoadModule alias_module modules/mod_alias.so\n";
	stream << "LoadModule allowmethods_module modules/mod_allowmethods.so\n";
	stream << "LoadModule asis_module modules/mod_asis.so\n";
	stream << "LoadModule auth_basic_module modules/mod_auth_basic.so\n";
	stream << "#LoadModule auth_digest_module modules/mod_auth_digest.so\n";
	stream << "#LoadModule auth_form_module modules/mod_auth_form.so\n";
	stream << "#LoadModule authn_anon_module modules/mod_authn_anon.so\n";
	stream << "LoadModule authn_core_module modules/mod_authn_core.so\n";
	stream << "#LoadModule authn_dbd_module modules/mod_authn_dbd.so\n";
	stream << "#LoadModule authn_dbm_module modules/mod_authn_dbm.so\n";
	stream << "LoadModule authn_file_module modules/mod_authn_file.so\n";
	stream << "#LoadModule authn_socache_module modules/mod_authn_socache.so\n";
	stream << "#LoadModule authnz_ldap_module modules/mod_authnz_ldap.so\n";
	stream << "LoadModule authz_core_module modules/mod_authz_core.so\n";
	stream << "#LoadModule authz_dbd_module modules/mod_authz_dbd.so\n";
	stream << "#LoadModule authz_dbm_module modules/mod_authz_dbm.so\n";
	stream << "LoadModule authz_groupfile_module modules/mod_authz_groupfile.so\n";
	stream << "LoadModule authz_host_module modules/mod_authz_host.so\n";
	stream << "#LoadModule authz_owner_module modules/mod_authz_owner.so\n";
	stream << "LoadModule authz_user_module modules/mod_authz_user.so\n";
	stream << "LoadModule autoindex_module modules/mod_autoindex.so\n";
	stream << "#LoadModule buffer_module modules/mod_buffer.so\n";
	stream << "#LoadModule cache_module modules/mod_cache.so\n";
	stream << "#LoadModule cache_disk_module modules/mod_cache_disk.so\n";
	stream << "#LoadModule cache_socache_module modules/mod_cache_socache.so\n";
	stream << "#LoadModule cern_meta_module modules/mod_cern_meta.so\n";
	stream << "LoadModule cgi_module modules/mod_cgi.so\n";
	stream << "#LoadModule charset_lite_module modules/mod_charset_lite.so\n";
	stream << "#LoadModule data_module modules/mod_data.so\n";
	stream << "#LoadModule dav_module modules/mod_dav.so\n";
	stream << "#LoadModule dav_fs_module modules/mod_dav_fs.so\n";
	stream << "#LoadModule dav_lock_module modules/mod_dav_lock.so\n";
	stream << "#LoadModule dbd_module modules/mod_dbd.so\n";
	stream << "#LoadModule deflate_module modules/mod_deflate.so\n";
	stream << "LoadModule dir_module modules/mod_dir.so\n";
	stream << "#LoadModule dumpio_module modules/mod_dumpio.so\n";
	stream << "LoadModule env_module modules/mod_env.so\n";
	stream << "#LoadModule expires_module modules/mod_expires.so\n";
	stream << "#LoadModule ext_filter_module modules/mod_ext_filter.so\n";
	stream << "#LoadModule file_cache_module modules/mod_file_cache.so\n";
	stream << "#LoadModule filter_module modules/mod_filter.so\n";
	stream << "#LoadModule headers_module modules/mod_headers.so\n";
	stream << "#LoadModule heartbeat_module modules/mod_heartbeat.so\n";
	stream << "#LoadModule heartmonitor_module modules/mod_heartmonitor.so\n";
	stream << "#LoadModule ident_module modules/mod_ident.so\n";
	stream << "#LoadModule imagemap_module modules/mod_imagemap.so\n";
	stream << "LoadModule include_module modules/mod_include.so\n";
	stream << "#LoadModule info_module modules/mod_info.so\n";
	stream << "LoadModule isapi_module modules/mod_isapi.so\n";
	stream << "#LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so\n";
	stream << "#LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so\n";
	stream << "#LoadModule lbmethod_bytraffic_module modules/mod_lbmethod_bytraffic.so\n";
	stream << "#LoadModule lbmethod_heartbeat_module modules/mod_lbmethod_heartbeat.so\n";
	stream << "#LoadModule ldap_module modules/mod_ldap.so\n";
	stream << "#LoadModule logio_module modules/mod_logio.so\n";
	stream << "LoadModule log_config_module modules/mod_log_config.so\n";
	stream << "#LoadModule log_debug_module modules/mod_log_debug.so\n";
	stream << "#LoadModule log_forensic_module modules/mod_log_forensic.so\n";
	stream << "#LoadModule lua_module modules/mod_lua.so\n";
	stream << "#LoadModule macro_module modules/mod_macro.so\n";
	stream << "LoadModule mime_module modules/mod_mime.so\n";
	stream << "#LoadModule mime_magic_module modules/mod_mime_magic.so\n";
	stream << "LoadModule negotiation_module modules/mod_negotiation.so\n";
	stream << "#LoadModule proxy_module modules/mod_proxy.so\n";
	stream << "#LoadModule proxy_ajp_module modules/mod_proxy_ajp.so\n";
	stream << "#LoadModule proxy_balancer_module modules/mod_proxy_balancer.so\n";
	stream << "#LoadModule proxy_connect_module modules/mod_proxy_connect.so\n";
	stream << "#LoadModule proxy_express_module modules/mod_proxy_express.so\n";
	stream << "#LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so\n";
	stream << "#LoadModule proxy_ftp_module modules/mod_proxy_ftp.so\n";
	stream << "#LoadModule proxy_html_module modules/mod_proxy_html.so\n";
	stream << "#LoadModule proxy_http_module modules/mod_proxy_http.so\n";
	stream << "#LoadModule proxy_scgi_module modules/mod_proxy_scgi.so\n";
	stream << "#LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so\n";
	stream << "#LoadModule ratelimit_module modules/mod_ratelimit.so\n";
	stream << "#LoadModule reflector_module modules/mod_reflector.so\n";
	stream << "#LoadModule remoteip_module modules/mod_remoteip.so\n";
	stream << "#LoadModule request_module modules/mod_request.so\n";
	stream << "#LoadModule reqtimeout_module modules/mod_reqtimeout.so\n";
	stream << "#LoadModule rewrite_module modules/mod_rewrite.so\n";
	stream << "#LoadModule sed_module modules/mod_sed.so\n";
	stream << "#LoadModule session_module modules/mod_session.so\n";
	stream << "#LoadModule session_cookie_module modules/mod_session_cookie.so\n";
	stream << "#LoadModule session_crypto_module modules/mod_session_crypto.so\n";
	stream << "#LoadModule session_dbd_module modules/mod_session_dbd.so\n";
	stream << "LoadModule setenvif_module modules/mod_setenvif.so\n";
	stream << "#LoadModule slotmem_plain_module modules/mod_slotmem_plain.so\n";
	stream << "#LoadModule slotmem_shm_module modules/mod_slotmem_shm.so\n";
	stream << "#LoadModule socache_dbm_module modules/mod_socache_dbm.so\n";
	stream << "#LoadModule socache_memcache_module modules/mod_socache_memcache.so\n";
	stream << "#LoadModule socache_shmcb_module modules/mod_socache_shmcb.so\n";
	stream << "#LoadModule speling_module modules/mod_speling.so\n";
	stream << "#LoadModule ssl_module modules/mod_ssl.so\n";
	stream << "#LoadModule status_module modules/mod_status.so\n";
	stream << "#LoadModule substitute_module modules/mod_substitute.so\n";
	stream << "#LoadModule unique_id_module modules/mod_unique_id.so\n";
	stream << "#LoadModule userdir_module modules/mod_userdir.so\n";
	stream << "#LoadModule usertrack_module modules/mod_usertrack.so\n";
	stream << "#LoadModule version_module modules/mod_version.so\n";
	stream << "#LoadModule vhost_alias_module modules/mod_vhost_alias.so\n";
	stream << "#LoadModule watchdog_module modules/mod_watchdog.so\n";
	stream << "#LoadModule xml2enc_module modules/mod_xml2enc.so\n";
	stream << "\n";
	stream << "<IfModule unixd_module>\n";
	stream << "#\n";
	stream << "# If you wish httpd to run as a different user or group, you must run\n";
	stream << "# httpd as root initially and it will switch.  \n";
	stream << "#\n";
	stream << "# User/Group: The name (or #number) of the user/group to run httpd as.\n";
	stream << "# It is usually good practice to create a dedicated user and group for\n";
	stream << "# running httpd, as with most system services.\n";
	stream << "#\n";
	stream << "User daemon\n";
	stream << "Group daemon\n";
	stream << "\n";
	stream << "</IfModule>\n";
	stream << "\n";
	stream << "# 'Main' server configuration\n";
	stream << "#\n";
	stream << "# The directives in this section set up the values used by the 'main'\n";
	stream << "# server, which responds to any requests that aren't handled by a\n";
	stream << "# <VirtualHost> definition.  These values also provide defaults for\n";
	stream << "# any <VirtualHost> containers you may define later in the file.\n";
	stream << "#\n";
	stream << "# All of these directives may appear inside <VirtualHost> containers,\n";
	stream << "# in which case these default settings will be overridden for the\n";
	stream << "# virtual host being defined.\n";
	stream << "#\n";
	stream << "\n";
	stream << "#\n";
	stream << "# ServerAdmin: Your address, where problems with the server should be\n";
	stream << "# e-mailed.  This address appears on some server-generated pages, such\n";
	stream << "# as error documents.  e.g. admin@your-domain.com\n";
	stream << "#\n";
	stream << "ServerAdmin admin@example.com\n";
	stream << "\n";
	stream << "#\n";
	stream << "# ServerName gives the name and port that the server uses to identify itself.\n";
	stream << "# This can often be determined automatically, but we recommend you specify\n";
	stream << "# it explicitly to prevent problems during startup.\n";
	stream << "#\n";
	stream << "# If your host doesn't have a registered DNS name, enter its IP address here.\n";
	stream << "#\n";
	stream << "#ServerName www.example.com:80\n";
	stream << "\n";
	stream << "#\n";
	stream << "# Deny access to the entirety of your server's filesystem. You must\n";
	stream << "# explicitly permit access to web content directories in other \n";
	stream << "# <Directory> blocks below.\n";
	stream << "#\n";
	stream << "<Directory />\n";
	stream << "    AllowOverride none\n";
	stream << "    Require all denied\n";
	stream << "</Directory>\n";
	stream << "\n";
	stream << "#\n";
	stream << "# Note that from this point forward you must specifically allow\n";
	stream << "# particular features to be enabled - so if something's not working as\n";
	stream << "# you might expect, make sure that you have specifically enabled it\n";
	stream << "# below.\n";
	stream << "#\n";
	stream << "\n";
	stream << "\n";
	stream << "#\n";
	stream << "# DirectoryIndex: sets the file that Apache will serve if a directory\n";
	stream << "# is requested.\n";
	stream << "#\n";
	stream << "<IfModule dir_module>\n";
	stream << "    DirectoryIndex index.html index.php\n";
	stream << "</IfModule>\n";
	stream << "\n";
	stream << "#\n";
	stream << "# The following lines prevent .htaccess and .htpasswd files from being \n";
	stream << "# viewed by Web clients. \n";
	stream << "#\n";
	stream << "<Files \".ht*\">\n";
	stream << "    Require all denied\n";
	stream << "</Files>\n";
	stream << "\n";
	stream << "#\n";
	stream << "# ErrorLog: The location of the error log file.\n";
	stream << "# If you do not specify an ErrorLog directive within a <VirtualHost>\n";
	stream << "# container, error messages relating to that virtual host will be\n";
	stream << "# logged here.  If you *do* define an error logfile for a <VirtualHost>\n";
	stream << "# container, that host's errors will be logged there and not here.\n";
	stream << "#\n";
	stream << "ErrorLog \"logs/error.log\"\n";
	stream << "\n";
	stream << "#\n";
	stream << "# LogLevel: Control the number of messages logged to the error_log.\n";
	stream << "# Possible values include: debug, info, notice, warn, error, crit,\n";
	stream << "# alert, emerg.\n";
	stream << "#\n";
	stream << "LogLevel warn\n";
	stream << "\n";
	stream << "<IfModule log_config_module>\n";
	stream << "    #\n";
	stream << "    # The following directives define some format nicknames for use with\n";
	stream << "    # a CustomLog directive (see below).\n";
	stream << "    #\n";
	stream << "    LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\n";
	stream << "    LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common\n";
	stream << "\n";
	stream << "    <IfModule logio_module>\n";
	stream << "      # You need to enable mod_logio.c to use %I and %O\n";
	stream << "      LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %I %O\" combinedio\n";
	stream << "    </IfModule>\n";
	stream << "\n";
	stream << "    #\n";
	stream << "    # The location and format of the access logfile (Common Logfile Format).\n";
	stream << "    # If you do not define any access logfiles within a <VirtualHost>\n";
	stream << "    # container, they will be logged here.  Contrariwise, if you *do*\n";
	stream << "    # define per-<VirtualHost> access logfiles, transactions will be\n";
	stream << "    # logged therein and *not* in this file.\n";
	stream << "    #\n";
	stream << "    CustomLog \"logs/access.log\" common\n";
	stream << "\n";
	stream << "    #\n";
	stream << "    # If you prefer a logfile with access, agent, and referer information\n";
	stream << "    # (Combined Logfile Format) you can use the following directive.\n";
	stream << "    #\n";
	stream << "    #CustomLog \"logs/access.log\" combined\n";
	stream << "</IfModule>\n";
	stream << "\n";
	stream << "<IfModule mime_module>\n";
	stream << "    #\n";
	stream << "    # TypesConfig points to the file containing the list of mappings from\n";
	stream << "    # filename extension to MIME-type.\n";
	stream << "    #\n";
	stream << "    TypesConfig conf/mime.types\n";
	stream << "\n";
	stream << "    #\n";
	stream << "    # AddType allows you to add to or override the MIME configuration\n";
	stream << "    # file specified in TypesConfig for specific file types.\n";
	stream << "    #\n";
	stream << "    #AddType application/x-gzip .tgz\n";
	stream << "    #\n";
	stream << "    # AddEncoding allows you to have certain browsers uncompress\n";
	stream << "    # information on the fly. Note: Not all browsers support this.\n";
	stream << "    #\n";
	stream << "    #AddEncoding x-compress .Z\n";
	stream << "    #AddEncoding x-gzip .gz .tgz\n";
	stream << "    #\n";
	stream << "    # If the AddEncoding directives above are commented-out, then you\n";
	stream << "    # probably should define those extensions to indicate media types:\n";
	stream << "    #\n";
	stream << "    AddType application/x-compress .Z\n";
	stream << "    AddType application/x-gzip .gz .tgz\n";
	stream << "\n";
	stream << "    #\n";
	stream << "    # AddHandler allows you to map certain file extensions to \"handlers\":\n";
	stream << "    # actions unrelated to filetype. These can be either built into the server\n";
	stream << "    # or added with the Action directive (see below)\n";
	stream << "    #\n";
	stream << "    # To use CGI scripts outside of ScriptAliased directories:\n";
	stream << "    # (You will also need to add \"ExecCGI\" to the \"Options\" directive.)\n";
	stream << "    #\n";
	stream << "    #AddHandler cgi-script .cgi\n";
	stream << "\n";
	stream << "    # For type maps (negotiated resources):\n";
	stream << "    #AddHandler type-map var\n";
	stream << "\n";
	stream << "    #\n";
	stream << "    # Filters allow you to process content before it is sent to the client.\n";
	stream << "    #\n";
	stream << "    # To parse .shtml files for server-side includes (SSI):\n";
	stream << "    # (You will also need to add \"Includes\" to the \"Options\" directive.)\n";
	stream << "    #\n";
	stream << "    #AddType text/html .shtml\n";
	stream << "    #AddOutputFilter INCLUDES .shtml\n";
	stream << "</IfModule>\n";
	stream << "\n";
	stream << "#\n";
	stream << "# The mod_mime_magic module allows the server to use various hints from the\n";
	stream << "# contents of the file itself to determine its type.  The MIMEMagicFile\n";
	stream << "# directive tells the module where the hint definitions are located.\n";
	stream << "#\n";
	stream << "#MIMEMagicFile conf/magic\n";
	stream << "\n";
	stream << "#\n";
	stream << "# Customizable error responses come in three flavors:\n";
	stream << "# 1) plain text 2) local redirects 3) external redirects\n";
	stream << "#\n";
	stream << "# Some examples:\n";
	stream << "#ErrorDocument 500 \"The server made a boo boo.\"\n";
	stream << "#ErrorDocument 404 /missing.html\n";
	stream << "#ErrorDocument 404 \"/cgi-bin/missing_handler.pl\"\n";
	stream << "#ErrorDocument 402 http://www.example.com/subscription_info.html\n";
	stream << "#\n";
	stream << "\n";
	stream << "#\n";
	stream << "# MaxRanges: Maximum number of Ranges in a request before\n";
	stream << "# returning the entire resource, or one of the special\n";
	stream << "# values 'default', 'none' or 'unlimited'.\n";
	stream << "# Default setting is to accept 200 Ranges.\n";
	stream << "#MaxRanges unlimited\n";
	stream << "\n";
	stream << "#\n";
	stream << "# EnableMMAP and EnableSendfile: On systems that support it, \n";
	stream << "# memory-mapping or the sendfile syscall may be used to deliver\n";
	stream << "# files.  This usually improves server performance, but must\n";
	stream << "# be turned off when serving from networked-mounted \n";
	stream << "# filesystems or if support for these functions is otherwise\n";
	stream << "# broken on your system.\n";
	stream << "# Defaults: EnableMMAP On, EnableSendfile Off\n";
	stream << "#\n";
	stream << "#EnableMMAP off\n";
	stream << "#EnableSendfile on\n";
	stream << "\n";
	stream << "# Supplemental configuration\n";
	stream << "#\n";
	stream << "# The configuration files in the conf/extra/ directory can be \n";
	stream << "# included to add extra features or to modify the default configuration of \n";
	stream << "# the server, or you may simply copy their contents here and change as \n";
	stream << "# necessary.\n";
	stream << "\n";
	stream << "# Server-pool management (MPM specific)\n";
	stream << "#Include conf/extra/httpd-mpm.conf\n";
	stream << "\n";
	stream << "# Multi-language error messages\n";
	stream << "#Include conf/extra/httpd-multilang-errordoc.conf\n";
	stream << "\n";
	stream << "# Fancy directory listings\n";
	stream << "#Include conf/extra/httpd-autoindex.conf\n";
	stream << "\n";
	stream << "# Language settings\n";
	stream << "#Include conf/extra/httpd-languages.conf\n";
	stream << "\n";
	stream << "# User home directories\n";
	stream << "#Include conf/extra/httpd-userdir.conf\n";
	stream << "\n";
	stream << "# Real-time info on requests and configuration\n";
	stream << "#Include conf/extra/httpd-info.conf\n";
	stream << "\n";
	stream << "# Virtual hosts\n";
	stream << "#Include conf/extra/httpd-vhosts.conf\n";
	stream << "\n";
	stream << "# Local access to the Apache HTTP Server Manual\n";
	stream << "#Include conf/extra/httpd-manual.conf\n";
	stream << "\n";
	stream << "# Distributed authoring and versioning (WebDAV)\n";
	stream << "#Include conf/extra/httpd-dav.conf\n";
	stream << "\n";
	stream << "# Various default settings\n";
	stream << "#Include conf/extra/httpd-default.conf\n";
	stream << "\n";
	stream << "# Configure mod_proxy_html to understand HTML4/XHTML1\n";
	stream << "<IfModule proxy_html_module>\n";
	stream << "Include conf/extra/proxy-html.conf\n";
	stream << "</IfModule>\n";
	stream << "\n";
	stream << "# Secure (SSL/TLS) connections\n";
	stream << "#Include conf/extra/httpd-ssl.conf\n";
	stream << "#\n";
	stream << "# Note: The following must must be present to support\n";
	stream << "#       starting without SSL on platforms with no /dev/random equivalent\n";
	stream << "#       but a statically compiled-in mod_ssl.\n";
	stream << "#\n";
	stream << "<IfModule ssl_module>\n";
	stream << "SSLRandomSeed startup builtin\n";
	stream << "SSLRandomSeed connect builtin\n";
	stream << "</IfModule>\n";
	stream << "#\n";
	stream << "# uncomment out the below to deal with user agents that deliberately\n";
	stream << "# violate open standards by misusing DNT (DNT *must* be a specific\n";
	stream << "# end-user choice)\n";
	stream << "#\n";
	stream << "#<IfModule setenvif_module>\n";
	stream << "#BrowserMatch \"MSIE 10.0;\" bad_DNT\n";
	stream << "#</IfModule>\n";
	stream << "#<IfModule headers_module>\n";
	stream << "#RequestHeader unset DNT env=bad_DNT\n";
	stream << "#</IfModule>\n";
	stream << "\n";
}
